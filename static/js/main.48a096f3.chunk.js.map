{"version":3,"sources":["components/Home.js","redux/movies/movieActions.js","components/Movie.js","redux/movies/movieReducer.js","redux/store.js","App.js","index.js"],"names":["require","config","Home","history","useHistory","useState","movies","setMovies","search","setSearch","page","setPage","genreItem","useEffect","a","axios","get","process","then","res","data","results","catch","err","console","log","fetch","genreFetch","submitHandler","e","preventDefault","getMovies","className","onSubmit","type","placeholder","onChange","target","value","map","movie","onClick","push","pathname","id","src","backdrop_path","alt","original_title","ADD_FAV","REMOVE_FAV","connect","state","favMovies","addFav","movieId","removeFav","props","setMovie","fav","setFav","recommended","setRecommended","path","location","split","length","forEach","fetchRecommended","buttonText","original_language","vote_count","recommendation","addToFavorite","action","filter","item","store","createStore","movieReducer","window","__REDUX_DEVTOOLS_EXTENSION__","App","exact","component","Movie","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48a096f3.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../styles/home.css'\r\nimport '../App.css'\r\n\r\n\r\nrequire('dotenv').config();\r\n\r\n\r\n\r\nfunction Home() {\r\n\r\n  const history = useHistory()\r\n\r\n  const [movies, setMovies] = useState([])\r\n  const [search, setSearch] = useState(\"\")\r\n  const [page, setPage] = useState(1)\r\n  const [genre, setGenre] = useState([])\r\n  const [genreItem, setGenreItem] = useState([])\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=${page}`)\r\n        .then(res => setMovies(res.data.results))\r\n        // .then( movies.map(movie => setGenreItem([...movie.genre_ids])))\r\n        .catch(err => console.log(err))\r\n    }\r\n    fetch()\r\n\r\n    const genreFetch = async () => {\r\n      await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\r\n        .then(res => console.log(res.data))\r\n        .catch(err => console.log(err))\r\n    }\r\n    genreFetch()\r\n  }, [page])\r\n\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&query=${search}&page=1&include_adult=false`)\r\n    .then(res => setMovies(res.data.results)) \r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  const getMovies = async () => {\r\n        await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=${page}`)\r\n        .then(res => setMovies(res.data.results))\r\n        .catch(err => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <form onSubmit={submitHandler}>\r\n        <input type='text' placeholder='search a movie' className='search-bar' onChange={(e) => setSearch(e.target.value)}/>\r\n        <input type='submit' value='Search' className='btn'/>\r\n      </form>\r\n        \r\n      <ul className='movies-list-container'>\r\n                {\r\n                    movies.map(movie => <li className='movies-list-item' key={movie.id} onClick= {() => {\r\n                      history.push({\r\n                        pathname: `/movie-details/${movie.id}`\r\n                      })\r\n                    }}>\r\n                      <img className='movie-image' src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} alt={movie.original_title}/>\r\n                      {movie.original_title}\r\n                      {genreItem}\r\n                      \r\n                   </li>)\r\n                }\r\n      </ul>\r\n      <div className='nav-btn-container'>\r\n      {page>1 ? <button className='btn' value='Previous' onClick={() => {\r\n        setPage(page - 1)\r\n        getMovies()\r\n        }}>Previous Page</button>: ''}\r\n\r\n        <button className='btn' value='Next' onClick={() => {\r\n          setPage(page + 1)\r\n          getMovies()\r\n        }}>Next</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","export const ADD_FAV = \"ADD_FAV\";\r\nexport const REMOVE_FAV = \"REMOVE_FAV\";\r\n\r\nexport const addFav = (movieId) => {\r\n  return {\r\n    type: ADD_FAV,\r\n    movieId,\r\n  };\r\n}\r\n\r\nexport const removeFav = (movieId) => {\r\n  return {\r\n    type: REMOVE_FAV,\r\n    movieId,\r\n  };\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios' \r\nimport { addFav, removeFav } from '../redux'\r\nimport { connect } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport '../styles/movie.css'\r\n\r\nfunction Movie(props) {\r\n\r\n    const history = useHistory()\r\n    \r\n    const [movie, setMovie] = useState([])\r\n    const [fav, setFav] = useState(false)\r\n    const [recommended, setRecommended] = useState([])\r\n\r\n    const path = props.location.pathname.split('/')\r\n    const movieId = path[path.length - 1]\r\n\r\n    useEffect(() => {\r\n        const fetch = async () => {\r\n          await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\r\n            .then(res => setMovie(res.data))\r\n            .catch(err => console.log(err))       \r\n            \r\n            setFav(false)\r\n            props.favMovies.forEach(id => {\r\n              if (id === movieId) {\r\n                setFav(true)\r\n              } \r\n            });\r\n          }\r\n        fetch()\r\n\r\n        const fetchRecommended = async () => {\r\n          await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/recommendations?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)\r\n            .then(res => setRecommended(res.data.results))\r\n            .catch(err => console.log(err))\r\n        }\r\n        fetchRecommended()\r\n      }, [movieId])\r\n\r\n      useEffect(() => {\r\n\r\n      })\r\n\r\n      const addFav = () => {\r\n        props.addFav(movieId);\r\n        setFav(true)\r\n      }\r\n\r\n      const removeFav = () => {\r\n        props.removeFav(movieId);\r\n        setFav(false)\r\n      }\r\n\r\n      const changeFavStatus = () => {\r\n        if(fav) {\r\n          removeFav()\r\n        } else {\r\n          addFav()\r\n        }\r\n      }\r\n\r\n      const buttonText = fav ? 'Remove from Favourites' : 'Add to favourites' \r\n    return (\r\n        <div className='movie-page-container'>\r\n          <div className='movie-container'>\r\n          <img src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`} alt={movie.original_title}/> \r\n            <h3>Movie Title: {movie.original_title}</h3>\r\n            {movieId}\r\n            <h3>Language: {movie.original_language}</h3>\r\n            <h3>Number Of Votes: {movie.vote_count}</h3>\r\n            {/* <h3>Genres: {genres}</h3> */}\r\n            <button className='btn fav-btn' onClick={changeFavStatus}>{buttonText}</button>\r\n          </div>\r\n            <h3>Recommendations:</h3>\r\n            <ul className='movies-list-container'>\r\n            {recommended.map(recommendation => <li className='movies-list-item' key={recommendation.id}\r\n              onClick= {() => {\r\n                history.push({\r\n                  pathname: `/movie-details/${recommendation.id}`\r\n                })\r\n              }}>{recommendation.original_title}<img className='movie-image' src={`https://image.tmdb.org/t/p/w500/${recommendation.backdrop_path}`} alt={recommendation.original_title}/></li>)}\r\n            </ul> \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    favMovies: state\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { addFav, removeFav })(Movie);\r\n","import { ADD_FAV, REMOVE_FAV } from \"./movieActions\";\r\nlet favoriteMovies;\r\nfunction addToFavorite(state = [], action) {\r\n  switch (action.type) {\r\n    case ADD_FAV:\r\n      favoriteMovies = [...state, action.movieId];\r\n      return favoriteMovies;\r\n    case REMOVE_FAV: \r\n      favoriteMovies = state.filter((item) => item !== action.movieId);\r\n      return favoriteMovies;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default addToFavorite;","import { createStore } from 'redux'\r\nimport movieReducer from './movies/movieReducer'\r\n\r\nconst store = createStore(movieReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nexport default store","import './App.css';\nimport Home from './components/Home'\nimport Movie from './components/Movie'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from 'react-redux';\nimport store from './redux/store'\n\n\nrequire('dotenv').config();\n\n\n\nfunction App() {\n  \n  return (\n    <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/movie-details/*\" exact component={Movie}/>\n      </Switch>\n    </Router>\n  </Provider>\n  )\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}